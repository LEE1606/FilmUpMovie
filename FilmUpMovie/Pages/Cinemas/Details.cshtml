@page
@model FilmUpMovie.Pages.Cinemas.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Cinema</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Cinema.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Cinema.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Cinema.Location)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Cinema.Location)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Cinema.NumOfHall)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Cinema.NumOfHall)
        </dd>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Cinema.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Cinema.Status)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Cinema.CinemaImage)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Cinema.CinemaImage != null)
            {
                <img src="data:image/png;base64,@Convert.ToBase64String(Model.Cinema.CinemaImage)" alt="Cinema Image" class="img-thumbnail" style="width: 150px; height: auto;" />
            }
            else
            {
                <span class="text-muted">No Image Available</span>
            }
        </dd>
    </dl>
</div>

@if (Model.Cinema.Status != CinemaStatus.Approved)
{
    @if ((await AuthorizationService.AuthorizeAsync(
  User, Model.Cinema, Operations.Approve)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Cinema.CinemaID" />
            <input type="hidden" name="status" value="@CinemaStatus.Approved" />
            <button type="submit" class="btn btn-xs btn-success">Approve</button>
        </form>
    }
}

@if (Model.Cinema.Status != CinemaStatus.Rejected)
{
    @if ((await AuthorizationService.AuthorizeAsync(
  User, Model.Cinema, Operations.Reject)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Cinema.CinemaID" />
            <input type="hidden" name="status" value="@CinemaStatus.Rejected" />
            <button type="submit" class="btn btn-xs btn-danger">Reject</button>
        </form>
    }
}

<div>
    @if ((await AuthorizationService.AuthorizeAsync(
    User, Model.Cinema,
    Operations.Update)).Succeeded)
    {
        <a asp-page="./Edit" asp-route-id="@Model.Cinema.CinemaID">Edit</a>
        <text> | </text>
    }
    <a asp-page="./Index">Back to List</a>
</div>